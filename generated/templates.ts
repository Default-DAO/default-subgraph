// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  Address,
  DataSourceTemplate,
  DataSourceContext
} from "@graphprotocol/graph-ts";

export class DefaultOS extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("DefaultOS", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "DefaultOS",
      [address.toHex()],
      context
    );
  }
}

export class Token extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("Token", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext("Token", [address.toHex()], context);
  }
}

export class Epoch extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("Epoch", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext("Epoch", [address.toHex()], context);
  }
}

export class Members extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("Members", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext("Members", [address.toHex()], context);
  }
}

export class Treasury extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("Treasury", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "Treasury",
      [address.toHex()],
      context
    );
  }
}

export class PeerRewards extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("PeerRewards", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "PeerRewards",
      [address.toHex()],
      context
    );
  }
}

export class Mining extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("Mining", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext("Mining", [address.toHex()], context);
  }
}
