// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class EndorsementGiven extends ethereum.Event {
  get params(): EndorsementGiven__Params {
    return new EndorsementGiven__Params(this);
  }
}

export class EndorsementGiven__Params {
  _event: EndorsementGiven;

  constructor(event: EndorsementGiven) {
    this._event = event;
  }

  get fromMember(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get toMember(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get endorsementsGiven(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get epoch(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class EndorsementWithdrawn extends ethereum.Event {
  get params(): EndorsementWithdrawn__Params {
    return new EndorsementWithdrawn__Params(this);
  }
}

export class EndorsementWithdrawn__Params {
  _event: EndorsementWithdrawn;

  constructor(event: EndorsementWithdrawn) {
    this._event = event;
  }

  get fromMember(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get toMember(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get endorsementsWithdrawn(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get epoch(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class MemberRegistered extends ethereum.Event {
  get params(): MemberRegistered__Params {
    return new MemberRegistered__Params(this);
  }
}

export class MemberRegistered__Params {
  _event: MemberRegistered;

  constructor(event: MemberRegistered) {
    this._event = event;
  }

  get member(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get alias_(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get epoch(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TokensStaked extends ethereum.Event {
  get params(): TokensStaked__Params {
    return new TokensStaked__Params(this);
  }
}

export class TokensStaked__Params {
  _event: TokensStaked;

  constructor(event: TokensStaked) {
    this._event = event;
  }

  get member(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get lockDuration(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get epoch(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class TokensUnstaked extends ethereum.Event {
  get params(): TokensUnstaked__Params {
    return new TokensUnstaked__Params(this);
  }
}

export class TokensUnstaked__Params {
  _event: TokensUnstaked;

  constructor(event: TokensUnstaked) {
    this._event = event;
  }

  get member(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get lockDuration(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get epoch(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class Members__getStakesForMemberResult {
  value0: i32;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: i32, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class Members extends ethereum.SmartContract {
  static bind(address: Address): Members {
    return new Members("Members", address);
  }

  ENDORSEMENT_LIMIT(): BigInt {
    let result = super.call(
      "ENDORSEMENT_LIMIT",
      "ENDORSEMENT_LIMIT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_ENDORSEMENT_LIMIT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ENDORSEMENT_LIMIT",
      "ENDORSEMENT_LIMIT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _OS(): Address {
    let result = super.call("_OS", "_OS():(address)", []);

    return result[0].toAddress();
  }

  try__OS(): ethereum.CallResult<Address> {
    let result = super.tryCall("_OS", "_OS():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  endorsementsGiven(param0: Address, param1: Address): BigInt {
    let result = super.call(
      "endorsementsGiven",
      "endorsementsGiven(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBigInt();
  }

  try_endorsementsGiven(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "endorsementsGiven",
      "endorsementsGiven(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  endorsementsReceived(param0: Address, param1: Address): BigInt {
    let result = super.call(
      "endorsementsReceived",
      "endorsementsReceived(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBigInt();
  }

  try_endorsementsReceived(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "endorsementsReceived",
      "endorsementsReceived(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAliasForMember(param0: Address): Bytes {
    let result = super.call(
      "getAliasForMember",
      "getAliasForMember(address):(bytes32)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBytes();
  }

  try_getAliasForMember(param0: Address): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getAliasForMember",
      "getAliasForMember(address):(bytes32)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getMemberForAlias(param0: Bytes): Address {
    let result = super.call(
      "getMemberForAlias",
      "getMemberForAlias(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toAddress();
  }

  try_getMemberForAlias(param0: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getMemberForAlias",
      "getMemberForAlias(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getStakesForMember(param0: Address): Members__getStakesForMemberResult {
    let result = super.call(
      "getStakesForMember",
      "getStakesForMember(address):(uint8,uint32,uint32,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Members__getStakesForMemberResult(
      result[0].toI32(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_getStakesForMember(
    param0: Address
  ): ethereum.CallResult<Members__getStakesForMemberResult> {
    let result = super.tryCall(
      "getStakesForMember",
      "getStakesForMember(address):(uint8,uint32,uint32,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Members__getStakesForMemberResult(
        value[0].toI32(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalEndorsementsAvailableToGive(param0: Address): BigInt {
    let result = super.call(
      "totalEndorsementsAvailableToGive",
      "totalEndorsementsAvailableToGive(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_totalEndorsementsAvailableToGive(
    param0: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalEndorsementsAvailableToGive",
      "totalEndorsementsAvailableToGive(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalEndorsementsGiven(param0: Address): BigInt {
    let result = super.call(
      "totalEndorsementsGiven",
      "totalEndorsementsGiven(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_totalEndorsementsGiven(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalEndorsementsGiven",
      "totalEndorsementsGiven(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalEndorsementsReceived(param0: Address): BigInt {
    let result = super.call(
      "totalEndorsementsReceived",
      "totalEndorsementsReceived(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_totalEndorsementsReceived(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalEndorsementsReceived",
      "totalEndorsementsReceived(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get os_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class EndorseMemberCall extends ethereum.Call {
  get inputs(): EndorseMemberCall__Inputs {
    return new EndorseMemberCall__Inputs(this);
  }

  get outputs(): EndorseMemberCall__Outputs {
    return new EndorseMemberCall__Outputs(this);
  }
}

export class EndorseMemberCall__Inputs {
  _call: EndorseMemberCall;

  constructor(call: EndorseMemberCall) {
    this._call = call;
  }

  get targetMember_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get endorsementsGiven_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class EndorseMemberCall__Outputs {
  _call: EndorseMemberCall;

  constructor(call: EndorseMemberCall) {
    this._call = call;
  }
}

export class MintEndorsementsCall extends ethereum.Call {
  get inputs(): MintEndorsementsCall__Inputs {
    return new MintEndorsementsCall__Inputs(this);
  }

  get outputs(): MintEndorsementsCall__Outputs {
    return new MintEndorsementsCall__Outputs(this);
  }
}

export class MintEndorsementsCall__Inputs {
  _call: MintEndorsementsCall;

  constructor(call: MintEndorsementsCall) {
    this._call = call;
  }

  get lockDuration_(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get tokensStaked_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MintEndorsementsCall__Outputs {
  _call: MintEndorsementsCall;

  constructor(call: MintEndorsementsCall) {
    this._call = call;
  }
}

export class ReclaimTokensCall extends ethereum.Call {
  get inputs(): ReclaimTokensCall__Inputs {
    return new ReclaimTokensCall__Inputs(this);
  }

  get outputs(): ReclaimTokensCall__Outputs {
    return new ReclaimTokensCall__Outputs(this);
  }
}

export class ReclaimTokensCall__Inputs {
  _call: ReclaimTokensCall;

  constructor(call: ReclaimTokensCall) {
    this._call = call;
  }
}

export class ReclaimTokensCall__Outputs {
  _call: ReclaimTokensCall;

  constructor(call: ReclaimTokensCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetAliasCall extends ethereum.Call {
  get inputs(): SetAliasCall__Inputs {
    return new SetAliasCall__Inputs(this);
  }

  get outputs(): SetAliasCall__Outputs {
    return new SetAliasCall__Outputs(this);
  }
}

export class SetAliasCall__Inputs {
  _call: SetAliasCall;

  constructor(call: SetAliasCall) {
    this._call = call;
  }

  get alias_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetAliasCall__Outputs {
  _call: SetAliasCall;

  constructor(call: SetAliasCall) {
    this._call = call;
  }
}

export class SetEndorsementLimitCall extends ethereum.Call {
  get inputs(): SetEndorsementLimitCall__Inputs {
    return new SetEndorsementLimitCall__Inputs(this);
  }

  get outputs(): SetEndorsementLimitCall__Outputs {
    return new SetEndorsementLimitCall__Outputs(this);
  }
}

export class SetEndorsementLimitCall__Inputs {
  _call: SetEndorsementLimitCall;

  constructor(call: SetEndorsementLimitCall) {
    this._call = call;
  }

  get newLimit_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetEndorsementLimitCall__Outputs {
  _call: SetEndorsementLimitCall;

  constructor(call: SetEndorsementLimitCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawEndorsementFromCall extends ethereum.Call {
  get inputs(): WithdrawEndorsementFromCall__Inputs {
    return new WithdrawEndorsementFromCall__Inputs(this);
  }

  get outputs(): WithdrawEndorsementFromCall__Outputs {
    return new WithdrawEndorsementFromCall__Outputs(this);
  }
}

export class WithdrawEndorsementFromCall__Inputs {
  _call: WithdrawEndorsementFromCall;

  constructor(call: WithdrawEndorsementFromCall) {
    this._call = call;
  }

  get targetMember_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get endorsementsWithdrawn_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawEndorsementFromCall__Outputs {
  _call: WithdrawEndorsementFromCall;

  constructor(call: WithdrawEndorsementFromCall) {
    this._call = call;
  }
}
