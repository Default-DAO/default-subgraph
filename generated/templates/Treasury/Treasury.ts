// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Deposited extends ethereum.Event {
  get params(): Deposited__Params {
    return new Deposited__Params(this);
  }
}

export class Deposited__Params {
  _event: Deposited;

  constructor(event: Deposited) {
    this._event = event;
  }

  get vault(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get member(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get epoch(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class VaultFeeChanged extends ethereum.Event {
  get params(): VaultFeeChanged__Params {
    return new VaultFeeChanged__Params(this);
  }
}

export class VaultFeeChanged__Params {
  _event: VaultFeeChanged;

  constructor(event: VaultFeeChanged) {
    this._event = event;
  }

  get vault(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newFee(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get epochOpened(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class VaultOpened extends ethereum.Event {
  get params(): VaultOpened__Params {
    return new VaultOpened__Params(this);
  }
}

export class VaultOpened__Params {
  _event: VaultOpened;

  constructor(event: VaultOpened) {
    this._event = event;
  }

  get vault(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get epochOpened(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class Withdrawn extends ethereum.Event {
  get params(): Withdrawn__Params {
    return new Withdrawn__Params(this);
  }
}

export class Withdrawn__Params {
  _event: Withdrawn;

  constructor(event: Withdrawn) {
    this._event = event;
  }

  get vault(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get member(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get epoch(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class Treasury extends ethereum.SmartContract {
  static bind(address: Address): Treasury {
    return new Treasury("Treasury", address);
  }

  _OS(): Address {
    let result = super.call("_OS", "_OS():(address)", []);

    return result[0].toAddress();
  }

  try__OS(): ethereum.CallResult<Address> {
    let result = super.tryCall("_OS", "_OS():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getVault(param0: Address): Address {
    let result = super.call("getVault", "getVault(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toAddress();
  }

  try_getVault(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("getVault", "getVault(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  vaultFee(param0: Address): i32 {
    let result = super.call("vaultFee", "vaultFee(address):(uint8)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toI32();
  }

  try_vaultFee(param0: Address): ethereum.CallResult<i32> {
    let result = super.tryCall("vaultFee", "vaultFee(address):(uint8)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get os_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ChangeFeeCall extends ethereum.Call {
  get inputs(): ChangeFeeCall__Inputs {
    return new ChangeFeeCall__Inputs(this);
  }

  get outputs(): ChangeFeeCall__Outputs {
    return new ChangeFeeCall__Outputs(this);
  }
}

export class ChangeFeeCall__Inputs {
  _call: ChangeFeeCall;

  constructor(call: ChangeFeeCall) {
    this._call = call;
  }

  get vault_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get newFeePctg(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class ChangeFeeCall__Outputs {
  _call: ChangeFeeCall;

  constructor(call: ChangeFeeCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get vault_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amountTokens_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class OpenVaultCall extends ethereum.Call {
  get inputs(): OpenVaultCall__Inputs {
    return new OpenVaultCall__Inputs(this);
  }

  get outputs(): OpenVaultCall__Outputs {
    return new OpenVaultCall__Outputs(this);
  }
}

export class OpenVaultCall__Inputs {
  _call: OpenVaultCall;

  constructor(call: OpenVaultCall) {
    this._call = call;
  }

  get token_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get fee_(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class OpenVaultCall__Outputs {
  _call: OpenVaultCall;

  constructor(call: OpenVaultCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get vault_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amountShares_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawFromVaultCall extends ethereum.Call {
  get inputs(): WithdrawFromVaultCall__Inputs {
    return new WithdrawFromVaultCall__Inputs(this);
  }

  get outputs(): WithdrawFromVaultCall__Outputs {
    return new WithdrawFromVaultCall__Outputs(this);
  }
}

export class WithdrawFromVaultCall__Inputs {
  _call: WithdrawFromVaultCall;

  constructor(call: WithdrawFromVaultCall) {
    this._call = call;
  }

  get vault_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amountshares_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawFromVaultCall__Outputs {
  _call: WithdrawFromVaultCall;

  constructor(call: WithdrawFromVaultCall) {
    this._call = call;
  }
}
