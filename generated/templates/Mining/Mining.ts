// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Registered extends ethereum.Event {
  get params(): Registered__Params {
    return new Registered__Params(this);
  }
}

export class Registered__Params {
  _event: Registered;

  constructor(event: Registered) {
    this._event = event;
  }

  get currentEpoch(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get member(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RewardsClaimed extends ethereum.Event {
  get params(): RewardsClaimed__Params {
    return new RewardsClaimed__Params(this);
  }
}

export class RewardsClaimed__Params {
  _event: RewardsClaimed;

  constructor(event: RewardsClaimed) {
    this._event = event;
  }

  get epochClaimed(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get member(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get totalRewardsClaimed(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RewardsIssued extends ethereum.Event {
  get params(): RewardsIssued__Params {
    return new RewardsIssued__Params(this);
  }
}

export class RewardsIssued__Params {
  _event: RewardsIssued;

  constructor(event: RewardsIssued) {
    this._event = event;
  }

  get currentEpoch(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get newRewardsPerShare(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Mining extends ethereum.SmartContract {
  static bind(address: Address): Mining {
    return new Mining("Mining", address);
  }

  EPOCH_MINING_REWARDS(): BigInt {
    let result = super.call(
      "EPOCH_MINING_REWARDS",
      "EPOCH_MINING_REWARDS():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_EPOCH_MINING_REWARDS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "EPOCH_MINING_REWARDS",
      "EPOCH_MINING_REWARDS():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  TOKEN_BONUS(): BigInt {
    let result = super.call("TOKEN_BONUS", "TOKEN_BONUS():(uint256)", []);

    return result[0].toBigInt();
  }

  try_TOKEN_BONUS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("TOKEN_BONUS", "TOKEN_BONUS():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _OS(): Address {
    let result = super.call("_OS", "_OS():(address)", []);

    return result[0].toAddress();
  }

  try__OS(): ethereum.CallResult<Address> {
    let result = super.tryCall("_OS", "_OS():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  accRewardsPerShare(): BigInt {
    let result = super.call(
      "accRewardsPerShare",
      "accRewardsPerShare():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_accRewardsPerShare(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "accRewardsPerShare",
      "accRewardsPerShare():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lastEpochIssued(): BigInt {
    let result = super.call(
      "lastEpochIssued",
      "lastEpochIssued():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_lastEpochIssued(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lastEpochIssued",
      "lastEpochIssued():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pendingRewards(): BigInt {
    let result = super.call("pendingRewards", "pendingRewards():(uint256)", []);

    return result[0].toBigInt();
  }

  try_pendingRewards(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pendingRewards",
      "pendingRewards():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get os_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AssignVaultCall extends ethereum.Call {
  get inputs(): AssignVaultCall__Inputs {
    return new AssignVaultCall__Inputs(this);
  }

  get outputs(): AssignVaultCall__Outputs {
    return new AssignVaultCall__Outputs(this);
  }
}

export class AssignVaultCall__Inputs {
  _call: AssignVaultCall;

  constructor(call: AssignVaultCall) {
    this._call = call;
  }

  get token_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AssignVaultCall__Outputs {
  _call: AssignVaultCall;

  constructor(call: AssignVaultCall) {
    this._call = call;
  }
}

export class ClaimRewardsCall extends ethereum.Call {
  get inputs(): ClaimRewardsCall__Inputs {
    return new ClaimRewardsCall__Inputs(this);
  }

  get outputs(): ClaimRewardsCall__Outputs {
    return new ClaimRewardsCall__Outputs(this);
  }
}

export class ClaimRewardsCall__Inputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }
}

export class ClaimRewardsCall__Outputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }
}

export class IssueRewardsCall extends ethereum.Call {
  get inputs(): IssueRewardsCall__Inputs {
    return new IssueRewardsCall__Inputs(this);
  }

  get outputs(): IssueRewardsCall__Outputs {
    return new IssueRewardsCall__Outputs(this);
  }
}

export class IssueRewardsCall__Inputs {
  _call: IssueRewardsCall;

  constructor(call: IssueRewardsCall) {
    this._call = call;
  }
}

export class IssueRewardsCall__Outputs {
  _call: IssueRewardsCall;

  constructor(call: IssueRewardsCall) {
    this._call = call;
  }
}

export class RegisterCall extends ethereum.Call {
  get inputs(): RegisterCall__Inputs {
    return new RegisterCall__Inputs(this);
  }

  get outputs(): RegisterCall__Outputs {
    return new RegisterCall__Outputs(this);
  }
}

export class RegisterCall__Inputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }
}

export class RegisterCall__Outputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetTokenBonusCall extends ethereum.Call {
  get inputs(): SetTokenBonusCall__Inputs {
    return new SetTokenBonusCall__Inputs(this);
  }

  get outputs(): SetTokenBonusCall__Outputs {
    return new SetTokenBonusCall__Outputs(this);
  }
}

export class SetTokenBonusCall__Inputs {
  _call: SetTokenBonusCall;

  constructor(call: SetTokenBonusCall) {
    this._call = call;
  }

  get newTokenBonus_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetTokenBonusCall__Outputs {
  _call: SetTokenBonusCall;

  constructor(call: SetTokenBonusCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
