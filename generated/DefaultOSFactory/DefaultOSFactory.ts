// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DaoCreated extends ethereum.Event {
  get params(): DaoCreated__Params {
    return new DaoCreated__Params(this);
  }
}

export class DaoCreated__Params {
  _event: DaoCreated;

  constructor(event: DaoCreated) {
    this._event = event;
  }

  get os(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class DefaultOSFactory extends ethereum.SmartContract {
  static bind(address: Address): DefaultOSFactory {
    return new DefaultOSFactory("DefaultOSFactory", address);
  }

  daoMap(param0: string): Address {
    let result = super.call("daoMap", "daoMap(string):(address)", [
      ethereum.Value.fromString(param0)
    ]);

    return result[0].toAddress();
  }

  try_daoMap(param0: string): ethereum.CallResult<Address> {
    let result = super.tryCall("daoMap", "daoMap(string):(address)", [
      ethereum.Value.fromString(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getDao(daoId: string): Address {
    let result = super.call("getDao", "getDao(string):(address)", [
      ethereum.Value.fromString(daoId)
    ]);

    return result[0].toAddress();
  }

  try_getDao(daoId: string): ethereum.CallResult<Address> {
    let result = super.tryCall("getDao", "getDao(string):(address)", [
      ethereum.Value.fromString(daoId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetDaoCall extends ethereum.Call {
  get inputs(): SetDaoCall__Inputs {
    return new SetDaoCall__Inputs(this);
  }

  get outputs(): SetDaoCall__Outputs {
    return new SetDaoCall__Outputs(this);
  }
}

export class SetDaoCall__Inputs {
  _call: SetDaoCall;

  constructor(call: SetDaoCall) {
    this._call = call;
  }

  get daoId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get os(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetDaoCall__Outputs {
  _call: SetDaoCall;

  constructor(call: SetDaoCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
